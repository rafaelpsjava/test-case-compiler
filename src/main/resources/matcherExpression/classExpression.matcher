#ACCEPT_CHARS

author=(.)*
description=(.)*
aZ=[a-zA-Z]+
aZMay=[a-zA-Z]*
spaces=[ ]+
spacesMay=[ ]*

#TYPES

stringType=((\")(.)*(\"))
floatType=${integerType}\\.[0-9]{1,2}
integerType=(\\-|\\+){0,1}[0-9]+
integerTypeMay=(\\-|\\+){0,1}[0-9]*
varType=${spacesMay}${aZ}${integerTypeMay}${aZMay}${integerTypeMay}${spacesMay}
varTypeMay=${spacesMay}${aZMay}${integerTypeMay}${aZMay}${integerTypeMay}${spacesMay}

#CLASS

packageType=((${varType})\\.{0,1}(${varTypeMay}))+
packageDecl=package${packageType};
className=${varType}
importDecl=import${packageType}\\.${className}${spacesMay};
classDecl=((${spacesMay}(public)${spacesMay}(abstract)${spaces}(class)${varType}\\{${spacesMay})|(${spacesMay}(public)${spacesMay}(class)${varType}\\{${spacesMay}))

#METHODS_IMPL

expressionConnectors=${spacesMay}(and|or|AND|OR)${spacesMay}
mathExpression=${spacesMay}(==|>=|<=|>|<)${spacesMay}
varDecl=${spacesMay}${aZ}(${integerTypeMay})${aZMay}${spacesMay}
methodInvocationDecl=${varDecl}(\\.){1}${varDecl}(\\(){1}((${varDecl}){0,1}|((${varDecl}(,){1}${spacesMay}){1,}${varDecl})|(${spacesMay}))\\){1}
methodDecl=${varDecl}(\\(){1}(${spacesMay})((${varDecl}${varDecl})|((${varDecl}${varDecl}(,){0,1}(${spacesMay})){1,}${varDecl})|(${spacesMay}))\\){1}
paramMethod=((((${varDecl},{0,1})*)${varDecl})|(${spacesMay}))*
paramMethodDecl=(${varDecl}${varDecl},{0,1}${varDecl}${spaces}${varDecl})*
booleanExpressionAcceptType=((${integerType}|${varType}|${floatType})|(${methodInvocationDecl}))
booleanExpressionType=((${booleanExpressionAcceptType}${mathExpression}${booleanExpressionAcceptType})|(${booleanExpressionAcceptType}))
booleanExpression=(${spacesMay}${booleanExpressionType}{1}${spacesMay})(${expressionConnectors}${booleanExpressionType})*

#TO_IMPL